CREATE COMPUTE MODULE DB_mf_Compute2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		
		DECLARE myBlob BLOB;
 		DECLARE data REFERENCE TO InputRoot.XMLNSC;
		SET myBlob = ASBITSTREAM(data
		                  		CCSID InputRoot.Properties.CodedCharSetId
		                        Encoding InputRoot.Properties.Encoding
		                         );
		                         
        DECLARE msg CHARACTER CAST(myBlob AS CHAR CCSID InputRoot.Properties.CodedCharSetId Encoding InputRoot.Properties.Encoding);  
		
		DECLARE appName CHARACTER ;
		SET appName = 'DB_log_task';
		DECLARE msgName CHARACTER ;
		SET msgName = 'DB_mf.msgflow';
		DECLARE LogType CHARACTER;
		SET LogType ='Host Request';
		
	CALL incerting(appName, msgName, LogType, msg);
	
	
		SET OutputRoot.XMLNSC.responce = InputRoot.XMLNSC.result;
	
	

	
	-- host responce
		DECLARE myBlob1 BLOB;
 		DECLARE data1 REFERENCE TO OutputRoot.JSON.Data;
		SET myBlob1 = ASBITSTREAM(data1
		                  		CCSID InputRoot.Properties.CodedCharSetId
		                        Encoding InputRoot.Properties.Encoding
		                         );
		                         
        DECLARE msg1 CHARACTER CAST(myBlob1 AS CHAR CCSID InputRoot.Properties.CodedCharSetId Encoding InputRoot.Properties.Encoding);   
		
		DECLARE appName1 CHARACTER ;
		SET appName1 = 'DB_log_task';
		DECLARE msgName1 CHARACTER ;
		SET msgName1 = 'DB_mf.msgflow';
		DECLARE LogType1 CHARACTER;
		SET LogType1 ='Host Response';
		
		CALL incerting(appName1, msgName1, LogType1, msg1);
		
		
		END;
END MODULE;