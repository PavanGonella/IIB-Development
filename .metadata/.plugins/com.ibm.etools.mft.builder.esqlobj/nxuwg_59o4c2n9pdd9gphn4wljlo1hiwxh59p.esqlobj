/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		--CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
		DECLARE inputString CHAR;
		SET inputString = CAST(InputRoot.BLOB.BLOB AS CHAR CCSID InputRoot.Properties.CodedCharSetId);
		SET inputString = TRIM(inputString);
		
		
		
		DECLARE var BOOLEAN STARTSWITH(inputString , '{');
		
		
		
		
		IF (STARTSWITH(inputString , '{') AND ENDSWITH(inputString, '}')) THEN
			 SET OutputRoot.JSON.Data = inputString;
			 PROPAGATE TO TERMINAL 'out1';
			 
			 
		ELSEIF (STARTSWITH(inputString, '<') AND ENDSWITH(inputString, '>')) THEN
			 SET OutputRoot.XMLNSC = inputString;
			 PROPAGATE TO TERMINAL 'out';
			
		END IF;
		
		
		
		--SET OutputRoot = InputRoot;
	END;
